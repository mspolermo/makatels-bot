import { InlineKeyboard, InlineButtonsRow } from "../../model/InlineButtonsRow/InlineButtonsRow";
import { frontendLink } from "../../../config/config";
import { moviesMirrorModel } from "../../model/MoviesMirrorModel/MoviesMirrorModel";
import { InlineKeyboardRepo } from "../../repositories/InlineKeyboardRepo/InlineKeyboardRepo";

// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä (–∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º)

class MainMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üé¨  –í–∏–¥–µ–æ', callback_data: 'movies' }]);
        this.addRow([{ text: 'üöï –¢–∞–∫—Å–∏', callback_data: 'taxi' }]);
        this.addRow([{ text: 'üì∞  –î—Ä—É–≥–æ–µ', callback_data: 'additional' }]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class VideoMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üé¨  KINOLAND', callback_data: 'kinoland' }]);
        this.addRow([{ text: 'üé¨  HDREZKA', callback_data: 'hdrezka' }]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu' }]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class VideoChoiceMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor(private choiceOption: moviesMirrorModel) {
        this.addRow([{ text: `üé•  –û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—Å—ã–ª—å –Ω–∞ ${this.choiceOption}`, callback_data: 'checkLastReply' }]);
        this.addRow([{ text: 'üì≤  –û–±–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª—å –Ω–∞ –∑–µ—Ä–∫–∞–ª–æ', callback_data: 'sendReq' }]);
        this.addRow([{ text: 'üîñ  –°—Å—ã–ª—å –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è (—Ä–µ–ø–æ—Ä—Ç)', callback_data: 'createTicket' }]);
        this.addRow([{ text: '<- –ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é', callback_data: 'movies' }]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu' }]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class GeneralTaxiMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üöñ  –î–≤–∏–≥–∞–µ–º—Å—è –ø–æ –≥–æ—Ä–æ–¥—É (–Æ–≥)', callback_data: 'taxiSouth'}]);
        this.addRow([{ text: 'üöñ  –î–≤–∏–≥–∞–µ–º—Å—è –ø–æ –≥–æ—Ä–æ–¥—É (–°–µ–≤–µ—Ä)', callback_data: 'taxiNorth'}]);
        this.addRow([{ text: 'üöï  –ó–∞–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–∫—Å–∏ –æ–Ω–ª–∞–π–Ω', callback_data: 'taxiOnline'}]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu'}]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class SouthTaxiMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üöñ  –°–ø—É—Ç–Ω–∏–∫ (—é–≥)', callback_data: 'tel:89501974244|–°–ø—É—Ç–Ω–∏–∫ (—é–≥)'}]);
        this.addRow([{ text: 'üöñ  –†–µ–≥–∏–æ–Ω (—é–≥)',  callback_data: 'tel:89506556526|–†–µ–≥–∏–æ–Ω (—é–≥)'}]);
        this.addRow([{ text: 'üöñ  –Ø–º—â–∏–∫ (—é–≥)', callback_data: 'tel:89043825687|–Ø–º—â–∏–∫ (—é–≥)'}]);
        this.addRow([{ text: 'üöñ  –ú–∞–∫—Å–∏–º (—é–≥)', callback_data: 'tel:83435041616|–ú–∞–∫—Å–∏–º (—é–≥)'}]);
        this.addRow([{ text: 'üèé  –ß–µ–ª–æ–≤–µ–∫ –°–º–∏—Ç–∞ -–í—Ç–∞–∫—Å–∏-', callback_data: 'tel:+79022725373|—á–µ–ª–æ–≤–µ–∫—É –°–º–∏—Ç–∞'}]);
        this.addRow([{ text: '<- –ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é', callback_data: 'taxi'}]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu'}]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class NorthTaxiMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üöñ  –í–æ—è–∂ (—Å–µ–≤–µ—Ä)', callback_data: 'tel:83435053335|–í–æ—è–∂ (—Å–µ–≤–µ—Ä)'}]);
        this.addRow([{ text: 'üöñ  –õ—é–∫—Å (—Å–µ–≤–µ—Ä)', callback_data: 'tel:89122206607|–õ—é–∫—Å (—Å–µ–≤–µ—Ä)'}]);
        this.addRow([{ text: 'üöñ  –†–µ–≥–∏–æ–Ω (—Å–µ–≤–µ—Ä)', callback_data: 'tel:89002036253|–†–µ–≥–∏–æ–Ω (—Å–µ–≤–µ—Ä)'}]);
        this.addRow([{ text: 'üöñ  –®—Ç—É—Ä–º–∞–Ω (—Å–µ–≤–µ—Ä)', callback_data: 'tel:83435031220|–®—Ç—É—Ä–º–∞–Ω (—Å–µ–≤–µ—Ä)'}]);
        this.addRow([{ text: 'üèé  –ß–µ–ª–æ–≤–µ–∫ –°–º–∏—Ç–∞ -–í—Ç–∞–∫—Å–∏-', callback_data: 'tel:+79022725373|—á–µ–ª–æ–≤–µ–∫—É –°–º–∏—Ç–∞'}]);
        this.addRow([{ text: '<- –ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é', callback_data: 'taxi'}]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu'}]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class OnlineTaxiMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üöï  –ó–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω (tg)', callback_data: 'link:https://t.me/polevskoy_taxi'}]);
        this.addRow([{ text: 'üöï  –ó–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω 2 (tg)', callback_data: 'link:https://t.me/polevskoytaxi'}]);
        this.addRow([{ text: 'üöï  –ó–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω 3 (vk)', callback_data: 'link:https://vk.me/join/z45V6aO7t4YiRArHfW7SiRWgr6RDeE_LTG4='}]);
        this.addRow([{ text: '<- –ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é', callback_data: 'taxi'}]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu'}]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

class AdditionalMenuKeyboard implements InlineKeyboardRepo {
    private keyboard: InlineButtonsRow[] = [];

    constructor() {
        this.addRow([{ text: 'üöç –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤ üöç', web_app: {url: frontendLink} }]);
        this.addRow([{ text: 'üó≥Ô∏è –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª', callback_data: 'suggest'}]);
        this.addRow([{ text: 'üì¨ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞', callback_data: 'report'}]);
        this.addRow([{ text: '<-- –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'mainMenu'}]);
    }

    addRow(row: InlineButtonsRow): void {
        this.keyboard.push(row);
    }

    getKeyboard(): InlineKeyboard {
        return { inline_keyboard: this.keyboard };
    }
}

export {
    MainMenuKeyboard,
    VideoMenuKeyboard,
    VideoChoiceMenuKeyboard,
    GeneralTaxiMenuKeyboard,
    SouthTaxiMenuKeyboard,
    NorthTaxiMenuKeyboard,
    OnlineTaxiMenuKeyboard,
    AdditionalMenuKeyboard
}
